basePath: /
definitions:
  models.ChatSummary:
    properties:
      chatID:
        type: string
      friend:
        $ref: '#/definitions/models.User'
      lastMessage:
        $ref: '#/definitions/models.Message'
      showEmotion:
        type: boolean
    type: object
  models.Message:
    properties:
      content:
        type: string
      createdAt:
        type: string
      sender:
        type: string
    type: object
  models.Post:
    properties:
      created_at:
        type: integer
      deleted:
        type: boolean
      deleted_at:
        type: integer
      detail:
        type: string
      emotion:
        type: integer
      expert:
        $ref: '#/definitions/models.User'
      firebase_user_id:
        type: string
      id:
        type: string
      picture:
        type: string
      title:
        type: string
      updated_at:
        type: integer
    type: object
  models.Response:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
      status:
        type: integer
    type: object
  models.User:
    properties:
      bio:
        type: string
      created_at:
        type: integer
      deleted:
        type: boolean
      deleted_at:
        type: integer
      email:
        type: string
      firebase_user_id:
        type: string
      is_expert:
        type: boolean
      name:
        type: string
      picture:
        type: string
      updated_at:
        type: integer
    type: object
  models.UserFeel:
    properties:
      created_at:
        type: integer
      deleted:
        type: boolean
      deleted_at:
        type: integer
      feel_id:
        type: integer
      firebase_user_id:
        type: string
      id:
        type: string
      reason:
        type: string
      updated_at:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Swagger for Mental Health Api App
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Mental Health Api
  version: "1.0"
paths:
  /chat/{userid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update to websocket
      tags:
      - /chat
    post:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Send Message
      tags:
      - /chat
  /chat/conversations/{userid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChatSummary'
      summary: Get conversations' summary
      tags:
      - /chat
  /chat/emotion/{userid}/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: path
        name: userid
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Change current showEmotion status
      tags:
      - /chat
  /chat/getall/{userid}/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: path
        name: userid
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get All Messages
      tags:
      - /chat
  /post:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get All Posts
      tags:
      - /post
    post:
      consumes:
      - application/json
      description: |-
        EVENT_emotion = 0
        POST__happy = 1
        POST__sad = 2
        POST__scared = 3
        POST__angry = 4
        POST__worry = 5
        POST__normal = 6
        POST__depression = 7
      parameters:
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create Post
      tags:
      - /post
  /post/{postid}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: PostID
        in: path
        items:
          type: integer
        name: id
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete a post
      tags:
      - /post
    get:
      consumes:
      - application/json
      parameters:
      - description: PostID
        in: path
        items:
          type: integer
        name: id
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get a post
      tags:
      - /post
    put:
      consumes:
      - application/json
      parameters:
      - description: PostID
        in: path
        items:
          type: integer
        name: id
        required: true
        type: array
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update Post
      tags:
      - /post
  /user:
    delete:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: header
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete User
      tags:
      - /user
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create User
      tags:
      - /user
    put:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update User
      tags:
      - /user
  /user-feel:
    get:
      consumes:
      - application/json
      description: |-
        EVENT_emotion = 0
        POST__happy = 1
        POST__sad = 2
        POST__scared = 3
        POST__angry = 4
        POST__worry = 5
        POST__normal = 6
        POST__depression = 7
      parameters:
      - description: UserID
        in: header
        name: UserID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get User's Feel
      tags:
      - /user-feel
    post:
      consumes:
      - application/json
      description: |-
        EVENT_emotion = 0
        POST__happy = 1
        POST__sad = 2
        POST__scared = 3
        POST__angry = 4
        POST__worry = 5
        POST__normal = 6
        POST__depression = 7
      parameters:
      - description: User Feel
        in: body
        name: UserFeel
        required: true
        schema:
          $ref: '#/definitions/models.UserFeel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create User's Feel
      tags:
      - /user-feel
  /user/get-info:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get User
      tags:
      - /user
  /user/login:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Login
      tags:
      - /user
swagger: "2.0"
